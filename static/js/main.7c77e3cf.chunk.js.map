{"version":3,"sources":["App.js","index.js"],"names":["App","initialFormState","name","username","_useState","useState","_useState2","Object","slicedToArray","users","setUser","_useState3","_useState4","form","setForm","_useState5","_useState6","editForm","setEditForm","_useState7","_useState8","editing","setEditing","handleInputChange","event","_event$target","target","value","objectSpread","defineProperty","handleEditInputChange","_event$target2","react_default","a","createElement","className","onSubmit","preventDefault","toConsumableArray","concat","type","onChange","length","map","user","key","onClick","editRow","id","filter","colSpan","updatedUser","class","ReactDOM","render","src_App","document","getElementById"],"mappings":"6LAuJeA,MArJf,WAEE,IAKMC,EAAmB,CAAEC,KAAM,GAAIC,SAAU,IAPlCC,EAUYC,mBARP,CAChB,CAAEH,KAAM,QAASC,SAAU,kBAC3B,CAAED,KAAM,MAAOC,SAAU,YAJdG,EAAAC,OAAAC,EAAA,EAAAD,CAAAH,EAAA,GAUNK,EAVMH,EAAA,GAUCI,EAVDJ,EAAA,GAAAK,EAWWN,mBAASJ,GAXpBW,EAAAL,OAAAC,EAAA,EAAAD,CAAAI,EAAA,GAWNE,EAXMD,EAAA,GAWAE,EAXAF,EAAA,GAAAG,EAYmBV,mBAASJ,GAZ5Be,EAAAT,OAAAC,EAAA,EAAAD,CAAAQ,EAAA,GAYNE,EAZMD,EAAA,GAYIE,EAZJF,EAAA,GAAAG,EAaiBd,oBAAS,GAb1Be,EAAAb,OAAAC,EAAA,EAAAD,CAAAY,EAAA,GAaNE,EAbMD,EAAA,GAaGE,EAbHF,EAAA,GAwCPG,EAAoB,SAAAC,GAAS,IAAAC,EACTD,EAAME,OAAtBxB,EADyBuB,EACzBvB,KAAMyB,EADmBF,EACnBE,MAEdb,EAAQP,OAAAqB,EAAA,EAAArB,CAAA,GAAKM,EAANN,OAAAsB,EAAA,EAAAtB,CAAA,GAAaL,EAAOyB,MAGvBG,EAAwB,SAAAN,GAAS,IAAAO,EACbP,EAAME,OAAtBxB,EAD6B6B,EAC7B7B,KAAMyB,EADuBI,EACvBJ,MAEdT,EAAYX,OAAAqB,EAAA,EAAArB,CAAA,GAAKU,EAANV,OAAAsB,EAAA,EAAAtB,CAAA,GAAiBL,EAAOyB,MAGrC,OACEK,EAAAC,EAAAC,cAAA,OAAKC,UAAU,mBACbH,EAAAC,EAAAC,cAAA,uCACAF,EAAAC,EAAAC,cAAA,0BACAF,EAAAC,EAAAC,cAAA,QAAME,SAxCM,SAAAZ,GACdA,EAAMa,iBAEDxB,EAAKX,MAASW,EAAKV,UAExBO,EAAQH,OAAA+B,EAAA,EAAA/B,CAAIE,GAAL8B,OAAA,CAAY1B,OAoCfmB,EAAAC,EAAAC,cAAA,qBACAF,EAAAC,EAAAC,cAAA,SACEM,KAAK,OACLtC,KAAK,OACLyB,MAAOd,EAAKX,KACZuC,SAAUlB,IAEZS,EAAAC,EAAAC,cAAA,yBACAF,EAAAC,EAAAC,cAAA,SACEM,KAAK,OACLtC,KAAK,WACLyB,MAAOd,EAAKV,SACZsC,SAAUlB,IAEZS,EAAAC,EAAAC,cAAA,+BAGFF,EAAAC,EAAAC,cAAA,wBACAF,EAAAC,EAAAC,cAAA,aACEF,EAAAC,EAAAC,cAAA,aACEF,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAA,kBACAF,EAAAC,EAAAC,cAAA,sBACAF,EAAAC,EAAAC,cAAA,uBAGJF,EAAAC,EAAAC,cAAA,aACGzB,EAAMiC,OAAS,EACdjC,EAAMkC,IAAI,SAAAC,GAAI,OACZZ,EAAAC,EAAAC,cAAA,MAAIW,IAAKD,EAAK1C,MACZ8B,EAAAC,EAAAC,cAAA,UAAKU,EAAK1C,MACV8B,EAAAC,EAAAC,cAAA,UAAKU,EAAKzC,UACV6B,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAA,UACEY,QAAS,kBA1DX,SAAAF,GACdtB,GAAW,GAEXJ,EAAY,CAAEhB,KAAM0C,EAAK1C,KAAMC,SAAUyC,EAAKzC,WAuDf4C,CAAQH,IACvBT,UAAU,uBAFZ,QAMAH,EAAAC,EAAAC,cAAA,UACEY,QAAS,kBApERE,EAoEyBJ,EAAK1C,UAnE/CQ,EAAQD,EAAMwC,OAAO,SAAAL,GAAI,OAAIA,EAAK1C,OAAS8C,KAD1B,IAAAA,GAqEDb,UAAU,uBAFZ,cAUNH,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAA,MAAIgB,QAAS,GAAb,eAKP7B,EACCW,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,uBACAF,EAAAC,EAAAC,cAAA,QACEE,SAAU,SAAAZ,GA5FD,IAACwB,EAAIG,EA6FZ3B,EAAMa,iBA7FEW,EA8FG/B,EAASf,KA9FRiD,EA8FclC,EA7FpCP,EAAQD,EAAMkC,IAAI,SAAAC,GAAI,OAAKA,EAAK1C,OAAS8C,EAAKG,EAAcP,KAC5DtB,GAAW,KA+FHU,EAAAC,EAAAC,cAAA,qBACAF,EAAAC,EAAAC,cAAA,SACEM,KAAK,OACLtC,KAAK,OACLyB,MAAOV,EAASf,KAChBuC,SAAUX,IAEZE,EAAAC,EAAAC,cAAA,yBACAF,EAAAC,EAAAC,cAAA,SACEM,KAAK,OACLtC,KAAK,WACLyB,MAAOV,EAASd,SAChBsC,SAAUX,IAEZE,EAAAC,EAAAC,cAAA,6BACAF,EAAAC,EAAAC,cAAA,UACEY,QAAS,kBAAMxB,GAAW,IAC1B8B,MAAM,uBAFR,YAQF,OC7IVC,IAASC,OAAOtB,EAAAC,EAAAC,cAACqB,EAAD,MAASC,SAASC,eAAe","file":"static/js/main.7c77e3cf.chunk.js","sourcesContent":["import React, { useState } from 'react'\n\nfunction App() {\n  // Data\n  const usersData = [\n    { name: 'Tania', username: 'floppydiskette' },\n    { name: 'Dan', username: 'gaeron' },\n  ]\n\n  const initialFormState = { name: '', username: '' }\n\n  // Setting state\n  const [users, setUser] = useState(usersData)\n  const [form, setForm] = useState(initialFormState)\n  const [editForm, setEditForm] = useState(initialFormState)\n  const [editing, setEditing] = useState(false)\n\n  // CRUD operations\n  const addUser = event => {\n    event.preventDefault()\n\n    if (!form.name || !form.username) return\n\n    setUser([...users, form])\n  }\n\n  const updateUser = (id, updatedUser) => {\n    setUser(users.map(user => (user.name === id ? updatedUser : user)))\n    setEditing(false)\n  }\n\n  const deleteUser = id => {\n    setUser(users.filter(user => user.name !== id))\n  }\n\n  const editRow = user => {\n    setEditing(true)\n\n    setEditForm({ name: user.name, username: user.username })\n  }\n\n  // Form state\n  const handleInputChange = event => {\n    const { name, value } = event.target\n\n    setForm({ ...form, [name]: value })\n  }\n\n  const handleEditInputChange = event => {\n    const { name, value } = event.target\n\n    setEditForm({ ...editForm, [name]: value })\n  }\n\n  return (\n    <div className=\"small-container\">\n      <h1>React CRUD App with Hooks</h1>\n      <h3>Add New User</h3>\n      <form onSubmit={addUser}>\n        <label>Name</label>\n        <input\n          type=\"text\"\n          name=\"name\"\n          value={form.name}\n          onChange={handleInputChange}\n        />\n        <label>Username</label>\n        <input\n          type=\"text\"\n          name=\"username\"\n          value={form.username}\n          onChange={handleInputChange}\n        />\n        <button>Add new user</button>\n      </form>\n\n      <h2>View Users</h2>\n      <table>\n        <thead>\n          <tr>\n            <th>Name</th>\n            <th>Username</th>\n            <th>Actions</th>\n          </tr>\n        </thead>\n        <tbody>\n          {users.length > 0 ? (\n            users.map(user => (\n              <tr key={user.name}>\n                <td>{user.name}</td>\n                <td>{user.username}</td>\n                <td>\n                  <button\n                    onClick={() => editRow(user)}\n                    className=\"button muted-button\"\n                  >\n                    Edit\n                  </button>\n                  <button\n                    onClick={() => deleteUser(user.name)}\n                    className=\"button muted-button\"\n                  >\n                    Delete\n                  </button>\n                </td>\n              </tr>\n            ))\n          ) : (\n            <tr>\n              <td colSpan={3}>No users</td>\n            </tr>\n          )}\n        </tbody>\n      </table>\n      {editing ? (\n        <div>\n          <h2>Edit User</h2>\n          <form\n            onSubmit={event => {\n              event.preventDefault()\n              updateUser(editForm.name, editForm)\n            }}\n          >\n            <label>Name</label>\n            <input\n              type=\"text\"\n              name=\"name\"\n              value={editForm.name}\n              onChange={handleEditInputChange}\n            />\n            <label>Username</label>\n            <input\n              type=\"text\"\n              name=\"username\"\n              value={editForm.username}\n              onChange={handleEditInputChange}\n            />\n            <button>Update user</button>\n            <button\n              onClick={() => setEditing(false)}\n              class=\"button muted-button\"\n            >\n              Cancel\n            </button>\n          </form>\n        </div>\n      ) : null}\n    </div>\n  )\n}\n\nexport default App\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}